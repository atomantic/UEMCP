name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  typescript-tests:
    name: TypeScript Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run linter
      run: |
        cd server
        npm run lint
    
    - name: Type check
      run: |
        cd server
        npm run typecheck
    
    - name: Run tests
      run: |
        cd server
        npm run test:coverage
    
    - name: Upload coverage
      uses: codecov/codecov-action@v3
      with:
        files: ./server/coverage/lcov.info
        flags: typescript

  python-tests:
    name: Python Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        # Use Python 3.11 to match Unreal Engine 5.4+ built-in Python version
        python-version: '3.11'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements-ci.txt
    
    - name: Run linter on plugin Python code
      run: |
        cd plugin/Content/Python
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 . --count --exit-zero --max-complexity=15 --max-line-length=120 --statistics
    
    - name: Run syntax check
      run: |
        cd plugin/Content/Python
        python -m py_compile *.py
    

  build:
    name: Build & Package Artifacts
    runs-on: ubuntu-latest
    needs: [typescript-tests, python-tests]
    # Only build artifacts on main branch, not on pull requests
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: package-lock.json
    
    - name: Build MCP Server
      run: |
        npm ci
        cd server
        npm run build
        
        # Create distributable package
        mkdir -p ../dist/uemcp-server
        cp -r dist/* ../dist/uemcp-server/
        cp package.json package-lock.json ../dist/uemcp-server/
        cp ../README.md ../dist/uemcp-server/
        cp ../LICENSE ../dist/uemcp-server/ || echo "No LICENSE file"
        
        # Create start script
        cat > ../dist/uemcp-server/start.sh << 'EOF'
        #!/bin/bash
        npm install --production
        node dist/index.js
        EOF
        chmod +x ../dist/uemcp-server/start.sh
    
    - name: Package UE Plugin
      run: |
        # Create plugin package
        mkdir -p dist/uemcp-plugin
        cp -r plugin/* dist/uemcp-plugin/
        
        # Create plugin README
        cat > dist/uemcp-plugin/README.md << 'EOF'
        # UEMCP Unreal Engine Plugin
        
        ## Installation
        1. Copy this folder to your project's Plugins directory
        2. Restart Unreal Engine
        3. The plugin will auto-start the Python listener
        
        ## Usage
        See main README for documentation.
        EOF
    
    - name: Create Release Archive
      run: |
        cd dist
        tar -czf uemcp-server.tar.gz uemcp-server/
        zip -r uemcp-plugin.zip uemcp-plugin/
        cd ..
    
    - name: Upload MCP Server Artifact
      uses: actions/upload-artifact@v4
      with:
        name: uemcp-server
        path: dist/uemcp-server.tar.gz
        retention-days: 30
    
    - name: Upload UE Plugin Artifact
      uses: actions/upload-artifact@v4
      with:
        name: uemcp-plugin
        path: dist/uemcp-plugin.zip
        retention-days: 30

  # Simplified integration test - just verify the build works
  integration-test:
    name: Verify Build
    runs-on: ubuntu-latest
    needs: build
    # Only run when build job runs (main branch only)
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    
    steps:
    - name: Download Server Artifact
      uses: actions/download-artifact@v4
      with:
        name: uemcp-server
    
    - name: Download Plugin Artifact
      uses: actions/download-artifact@v4
      with:
        name: uemcp-plugin
    
    - name: Verify Artifacts
      run: |
        echo "Checking server artifact..."
        tar -tzf uemcp-server.tar.gz | head -10
        
        echo -e "\nChecking plugin artifact..."
        unzip -l uemcp-plugin.zip | head -10
        
        echo -e "\nâœ… Artifacts created successfully!"

  # Optional: Add release job that publishes artifacts to GitHub Releases
  # release:
  #   name: Create Release
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: startsWith(github.ref, 'refs/tags/')
  #   steps:
  #     - uses: actions/download-artifact@v4
  #     - uses: softprops/action-gh-release@v1
  #       with:
  #         files: |
  #           uemcp-server/uemcp-server.tar.gz
  #           uemcp-plugin/uemcp-plugin.zip