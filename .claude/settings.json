{
  "permissions": {
    "allow": [
      "Bash(./test-ci-locally.sh:*)",
      "Bash(./test-ts.sh)",
      "Bash(/Users/Shared/Epic Games/UE_5.6/Engine/Build/BatchFiles/Mac/GenerateProjectFiles.sh:*)",
      "Bash(/usr/bin/npx tsc)",
      "Bash(/usr/local/bin/npm run build)",
      "Bash(\"/Users/Shared/Epic Games/UE_5.6/Engine/Build/BatchFiles/Mac/Build.sh\":*)",
      "Bash(\"/Users/Shared/Epic Games/UE_5.6/Engine/Build/BatchFiles/Mac/GenerateProjectFiles.sh\":*)",
      "Bash(cat:*)",
      "Bash(chmod:*)",
      "Bash(claude:*)",
      "Bash(cp:*)",
      "Bash(curl:*)",
      "Bash(diff:*)",
      "Bash(done)",
      "Bash(env)",
      "Bash(find:*)",
      "Bash(git commit:*)",
      "Bash(git:*)",
      "Bash(grep:*)",
      "Bash(kill:*)",
      "Bash(ln:*)",
      "Bash(ls:*)",
      "Bash(mkdir:*)",
      "Bash(mv:*)",
      "Bash(mypy:*)",
      "Bash(node:*)",
      "Bash(npm:*)",
      "Bash(npx tsc:*)",
      "Bash(npx:*)",
      "Bash(pip:*)",
      "Bash(pip3:*)",
      "Bash(pkill:*)",
      "Bash(python:*)",
      "Bash(python3:*)",
      "Bash(rm:*)",
      "Bash(rsync:*)",
      "Bash(sed:*)",
      "Bash(sudo lsof:*)",
      "Bash(timeout:*)",
      "Bash(true)",
      "Bash(xcodebuild:*)",
      "mcp__uemcp__actor_delete",
      "mcp__uemcp__actor_modify",
      "mcp__uemcp__actor_spawn",
      "mcp__uemcp__asset_info",
      "mcp__uemcp__asset_list",
      "mcp__uemcp__level_actors",
      "mcp__uemcp__level_outliner",
      "mcp__uemcp__level_save",
      "mcp__uemcp__project_info",
      "mcp__uemcp__python_proxy",
      "mcp__uemcp__restart_listener",
      "mcp__uemcp__test_connection",
      "mcp__uemcp__viewport_camera",
      "mcp__uemcp__viewport_focus",
      "mcp__uemcp__viewport_mode",
      "mcp__uemcp__viewport_screenshot",
    ],
    "deny": [
      "Bash(:(){ :|:& };:*)",
      "Bash(> /etc/passwd*)",
      "Bash(> /etc/sudoers*)",
      "Bash(> ~/.bash_profile*)",
      "Bash(> ~/.bashrc*)",
      "Bash(> ~/.zshrc*)",
      "Bash(at -r*)",
      "Bash(cat /dev/zero*)",
      "Bash(crontab -r*)",
      "Bash(curl * | bash*)",
      "Bash(curl * | sh*)",
      "Bash(defaults delete*)",
      "Bash(dscacheutil -flushcache*)",
      "Bash(echo '' > /etc*)",
      "Bash(echo '' > /System*)",
      "Bash(fork bomb*)",
      "Bash(ioreg -p IODeviceTree*)",
      "Bash(killall Dock*)",
      "Bash(killall Finder*)",
      "Bash(killall loginwindow*)",
      "Bash(killall SystemUIServer*)",
      "Bash(killall WindowServer*)",
      "Bash(launchctl unload /Library/Launch*)",
      "Bash(launchctl unload /System*)",
      "Bash(mkfifo /tmp/f*)",
      "Bash(nc -l*)",
      "Bash(networksetup -setairportpower*)",
      "Bash(open -a /System/Library/CoreServices/Finder.app /System*)",
      "Bash(osascript -e 'do shell script*)",
      "Bash(perl -e*system*)",
      "Bash(pmset sleepnow*)",
      "Bash(python -c \"import os; os.system*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(rm -rf /Applications*)",
      "Bash(rm -rf /bin*)",
      "Bash(rm -rf /cores*)",
      "Bash(rm -rf /dev*)",
      "Bash(rm -rf /etc*)",
      "Bash(rm -rf /Library*)",
      "Bash(rm -rf /opt*)",
      "Bash(rm -rf /private*)",
      "Bash(rm -rf /sbin*)",
      "Bash(rm -rf /System*)",
      "Bash(rm -rf /tmp)",
      "Bash(rm -rf /Users*)",
      "Bash(rm -rf /usr*)",
      "Bash(rm -rf /var*)",
      "Bash(rm -rf /Volumes*)",
      "Bash(rm -rf ~)",
      "Bash(ruby -e*system*)",
      "Bash(scp -o StrictHostKeyChecking=no*)",
      "Bash(ssh -o StrictHostKeyChecking=no*)",
      "Bash(sudo apachectl*)",
      "Bash(sudo chmod -R 000*)",
      "Bash(sudo chmod -R 777*)",
      "Bash(sudo chown -R*)",
      "Bash(sudo csrutil*)",
      "Bash(sudo dd if=/dev/random*)",
      "Bash(sudo dd if=/dev/zero*)",
      "Bash(sudo defaults write /Library*)",
      "Bash(sudo defaults write com.apple*)",
      "Bash(sudo diskutil*)",
      "Bash(sudo dscacheutil*)",
      "Bash(sudo dscl*)",
      "Bash(sudo fdesetup*)",
      "Bash(sudo firmwarepasswd*)",
      "Bash(sudo format*)",
      "Bash(sudo halt*)",
      "Bash(sudo installer*)",
      "Bash(sudo kextload*)",
      "Bash(sudo kextunload*)",
      "Bash(sudo kill -9*)",
      "Bash(sudo killall*)",
      "Bash(sudo launchctl remove*)",
      "Bash(sudo launchctl unload*)",
      "Bash(sudo networksetup*)",
      "Bash(sudo newfs*)",
      "Bash(sudo nvram*)",
      "Bash(sudo passwd*)",
      "Bash(sudo pkill*)",
      "Bash(sudo pmset*)",
      "Bash(sudo poweroff*)",
      "Bash(sudo reboot*)",
      "Bash(sudo rm*)",
      "Bash(sudo serveradmin*)",
      "Bash(sudo shutdown*)",
      "Bash(sudo softwareupdate*)",
      "Bash(sudo spctl*)",
      "Bash(sudo systemsetup*)",
      "Bash(sudo tmutil*)",
      "Bash(system_profiler SPHardwareDataType | grep 'Serial Number'*)",
      "Bash(telnet*)",
      "Bash(wget * | bash*)",
      "Bash(wget * | sh*)",
      "Bash(yes > /dev*)",
    ]
  }
}